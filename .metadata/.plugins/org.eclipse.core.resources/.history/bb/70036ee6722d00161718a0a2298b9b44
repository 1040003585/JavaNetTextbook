package _4_3Socket编程示例._4_4_4简单的聊天程序;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Set;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 * 
 * Copyright ? 2016 Authors. All rights reserved.
 *
 * FileName: ChatServer.java
 * @author : Wu_Being <1040003585@qq.com>
 * Date/Time: 2016-6-8/下午05:45:27
 * Description:
 */
public class ChatServer implements ActionListener,Runnable{

	JTextField msgTextField;
	JTextArea showTextArea;
	JFrame mainJFrame;
	JButton sentButton;
	JScrollPane jSPane;
	JPanel panel;//嵌板
	Container container;//容器
	
	Thread thread=null;
	ServerSocket serverSocket;
	Socket connectToClientSocket;
	DataInputStream inFromClient;
	DataOutputStream outToClient;
	
	public ChatServer(){
		//设置界面，包含容器
		mainJFrame=new JFrame("聊天――――服务器端");
		container=mainJFrame.getContentPane();
		mainJFrame.setSize(500, 400);
		mainJFrame.setVisible(true);
		mainJFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//聊天信息展示框
		showTextArea=new JTextArea();	
		showTextArea.setEditable(false);
		showTextArea.setLineWrap(true);
		jSPane=new JScrollPane(showTextArea);
		//聊天信息输入框
		msgTextField=new JTextField();
		msgTextField.setColumns(30);
		msgTextField.addActionListener(this);/**///?
		//发送按键
		sentButton=new JButton("发送");
		sentButton.addActionListener(this);/**/
		//嵌板有聊天信息输入框和发送按键
		panel=new JPanel();
		panel.setLayout(new FlowLayout());
		panel.add(msgTextField);
		panel.add(sentButton);
		//容器包含聊天信息展示框和嵌板
		container.add(jSPane,BorderLayout.CENTER);
		container.add(panel,BorderLayout.SOUTH);
		
		
		try {
			//创建服务器套接字
			serverSocket=new ServerSocket(9955);
			showTextArea.append("正在等待对话请求\n");
			//监听客户端的连接
			connectToClientSocket=serverSocket.accept();
			inFromClient=new DataInputStream(connectToClientSocket.getInputStream());
			outToClient=new DataOutputStream(connectToClientSocket.getOutputStream());
			//启动线程在后台来接收对方的消息
			
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new ChatServer();
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
